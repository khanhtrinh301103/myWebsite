<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Shopping Cart</title>
  <!-- Bootstrap CSS -->
  <link href="/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/buyer-cart.css" rel="stylesheet">
  <style>
    .cart-table th, .cart-table td {
      vertical-align: middle;
      text-align: center;
    }
    .cart-table img {
      max-width: 100px;
    }
    .cart-buttons {
      display: flex;
      justify-content: space-between;
    }
    .product-info {
      text-align: left;
      margin-left: 10px;
    }
    .product-image {
      border-right: 1px solid #dee2e6; /* Đường line ngăn cách */
      padding-right: 10px; /* Khoảng cách giữa đường line và ảnh */
    }
  </style>
</head>
<body>
  <%- include('../partials/buyer/header.ejs', { user: user, currentPath }) %>

  <div class="container mt-4">
    <h1>Shopping Cart</h1>
    <table class="table table-bordered cart-table">
      <thead>
        <tr>
          <th>Product</th>
          <th>Price</th>
          <th>Quantity</th>
          <th>Total</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <% cartItems.forEach(function(item) { %>
          <tr>
            <td>
              <div class="d-flex align-items-center">
                <div class="product-image">
                  <img src="<%= item.productImage %>" alt="<%= item.productName %>">
                </div>
                <div class="product-info">
                  <h5><%= item.productName %></h5>
                  <p>Category: <%= item.category %></p>
                  <p>Interior Style: <%= item.interiorStyle %></p>
                  <p>Seller: <%= item.fullName %></p>
                </div>
              </div>
            </td>
            <td>$<%= item.price %></td>
            <td>
              <div class="d-flex justify-content-center align-items-center">
                <button class="btn btn-secondary btn-sm btn-decrease" data-id="<%= item.id %>">-</button>
                <input type="number" class="form-control text-center mx-2 quantity-input" data-id="<%= item.id %>" value="<%= item.quantity %>" min="1" style="width: 60px;">
                <button class="btn btn-secondary btn-sm btn-increase" data-id="<%= item.id %>">+</button>
              </div>
            </td>
            <td>$<%= (item.price * item.quantity).toFixed(2) %></td>
            <td>
              <button class="btn btn-danger btn-sm btn-delete" data-id="<%= item.id %>">&times;</button>
            </td>
          </tr>
        <% }); %>
      </tbody>
    </table>
    <div class="cart-buttons mt-4">
      <a href="/buyer/homepage" class="btn btn-secondary">Continue Shopping</a>
      <div>
        <button class="btn btn-danger" id="clear-cart">Clear Cart</button>
        <button class="btn btn-primary" id="update-cart">Update Cart</button>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS and dependencies -->
  <script src="/js/bootstrap.bundle.min.js"></script>
  <script>
    document.querySelectorAll('.btn-decrease').forEach(button => {
      button.addEventListener('click', function (e) {
        const id = e.target.dataset.id;
        const quantityInput = document.querySelector(`.quantity-input[data-id="${id}"]`);
        let quantity = parseInt(quantityInput.value);

        if (quantity > 1) {
          quantity--;
          quantityInput.value = quantity;
          updateQuantity(id, quantity);
        }
      });
    });

    document.querySelectorAll('.btn-increase').forEach(button => {
      button.addEventListener('click', function (e) {
        const id = e.target.dataset.id;
        const quantityInput = document.querySelector(`.quantity-input[data-id="${id}"]`);
        let quantity = parseInt(quantityInput.value);

        quantity++;
        quantityInput.value = quantity;
        updateQuantity(id, quantity);
      });
    });

    document.querySelectorAll('.quantity-input').forEach(input => {
      input.addEventListener('change', function (e) {
        const id = e.target.dataset.id;
        let quantity = parseInt(e.target.value);

        if (quantity < 1) {
          quantity = 1;
          e.target.value = quantity;
        }
        updateQuantity(id, quantity);
      });
    });

    document.querySelectorAll('.btn-delete').forEach(button => {
      button.addEventListener('click', async function (e) {
        const id = e.target.dataset.id;

        try {
          const response = await fetch(`/buyer/cart/delete/${id}`, {
            method: 'POST'
          });

          if (response.ok) {
            e.target.closest('tr').remove();
          } else {
            alert('Error deleting item');
          }
        } catch (error) {
          console.error('Error deleting item:', error);
        }
      });
    });

    document.getElementById('clear-cart').addEventListener('click', async function () {
      try {
        const response = await fetch('/buyer/cart/clear', {
          method: 'POST'
        });

        if (response.ok) {
          document.querySelectorAll('.cart-table tbody tr').forEach(row => row.remove());
        } else {
          alert('Error clearing cart');
        }
      } catch (error) {
        console.error('Error clearing cart: ', error);
      }
    });

    async function updateQuantity(id, quantity) {
      try {
        const response = await fetch(`/buyer/cart/update/${id}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ quantity: parseInt(quantity) })
        });

        if (response.ok) {
          const totalElement = document.querySelector(`.btn-decrease[data-id="${id}"]`).closest('tr').querySelector('td:nth-child(4)');
          const price = parseFloat(totalElement.closest('tr').querySelector('td:nth-child(2)').textContent.replace('$', ''));
          totalElement.textContent = `$${(price * quantity).toFixed(2)}`;
        } else {
          alert('Error updating quantity');
        }
      } catch (error) {
        console.error('Error updating quantity: ', error);
      }
    }
  </script>
</body>
</html>
